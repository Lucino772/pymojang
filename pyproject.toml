[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pymojang"
dynamic = ["version"]
description = "It's a full wrapper arround the Mojang API and Mojang Authentication API"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["minecraft", "mojang", "python3"]
authors = [
    {name = "Lucino772", email = "lucapalmi772@gmail.com"},
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
  "requests>=2.31,<2.33",
  "validators>=0.31.0,<0.34.0",
  "pyjwt[crypto]~=2.8.0",
  "msal>=1.28,<1.31",
]

[project.urls]
Homepage = "https://github.com/Lucino772/pymojang"
Documentation = "https://lucino772.github.io/pymojang/"

[tool.towncrier]
name = "PyMojang"
directory = "changes"
package = "mojang"
filename = "CHANGELOG.rst"
title_format = "{name} v{version} ({project_date})"
issue_format = "`#{issue} <https://github.com/Lucino772/pymojang/issues/{issue}>`_"

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov=./ --cov-report=xml ./tests"

[tool.coverage.run]
source_pkgs = ["mojang"]
branch = true
parallel = true

[tool.coverage.paths]
mojang = ["src/mojang", "*/pymojang/src/mojang"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "@(abc\\.)?abstractmethod",
]
omit = ["tests/*"]

[tool.ruff]
line-length = 88
indent-width = 4
extend-exclude = [ "docs/**.py" ]

[tool.ruff.isort]
known-first-party = ["mojang"]

[tool.hatch]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/mojang/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/mojang"]

[tool.hatch.env]
requires = [
  "hatch-pip-compile"
]

[tool.hatch.envs.default]
type = "pip-compile"
pip-compile-resolver = "uv"
pip-compile-installer = "uv"
dependencies = [
  "towncrier==23.11.0",
]

[tool.hatch.envs.test]
type = "pip-compile"
pip-compile-resolver = "uv"
pip-compile-installer = "uv"
dependencies = [
  "pytest",
  "pytest-cov",
  "responses"
]

[tool.hatch.envs.test.scripts]
run = "pytest {args:tests}"

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.docs]
type = "pip-compile"
pip-compile-resolver = "uv"
pip-compile-installer = "uv"
dependencies = [
  "sphinx==7.1.2",
  "sphinxext-opengraph==0.9.1",
  "sphinx-copybutton==0.5.2",
  "sphinx_issues==4.1.0",
  "sphinx-autobuild==2021.3.14",
  "importlib-metadata==7.1.0",
  "furo==2024.5.6"
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b dirhtml docs/ docs/_build/html/"
serve = "sphinx-autobuild -b dirhtml docs/ docs/_build/html/ --open-browser"

[tool.hatch.envs.hatch-static-analysis]
type = "pip-compile"
pip-compile-resolver = "uv"
pip-compile-installer = "uv"